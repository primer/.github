name: Assign Release Conductor

on:
  push:
  workflow_dispatch:

jobs:
  assign-release-conductor:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # PVC
          - schedule_id: 'PCCKSZ5'
            name: View Component Release Conductor
            team_slug: view-components-release-conductor
            repo: primer/view_components
          # PRC
          - schedule_id: 'P3IIVC4'
            name: React Release Conductor
            team_slug: react-release-conductor
            repo: primer/react
    steps:
      - uses: actions/checkout@v4
      - name: Get App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PRIMER_APP_ID_SHARED }}
          private-key: ${{ secrets.PRIMER_APP_PRIVATE_KEY_SHARED }}
      - name: Get Release PR
        id: release-pr
        run: |
          PR_NUMBER=$(gh pr list -R ${{ matrix.repo }} --head changeset-release/main --json number --jq '.[].number')
          echo "number=$PR_NUMBER\n" >> $GITHUB_OUTPUT
          echo "assignees=$(gh pr view $PR_NUMBER -R ${{ matrix.repo }} --json assignees --jq ".assignees[].login" | sed ':a;N;$!ba;s/\n/,/g')\n" >> $GITHUB_OUTPUT
          echo "reviews=$(gh pr view $PR_NUMBER -R ${{ matrix.repo }} --json reviewRequests  --jq ".reviewRequests[].login" | sed ':a;N;$!ba;s/\n/,/g')\n" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      - run: echo ${{ steps.release-pr.outputs.number }}
      - run: echo ${{ steps.release-pr.outputs.assignees }}
      - run: echo ${{ steps.release-pr.outputs.reviews }}
      # - name: PagerDuty Schedule
      #   uses: ./.github/pagerduty
      #   id: pagerduty
      #   with:
      #     schedule-id: ${{ matrix.schedule_id }}
      #     token: ${{ secrets.PAGERDUTY_TOKEN_SHARED }}
      # - run: echo ${{ steps.pagerduty.outputs.user }} is the ${{ matrix.name }}
      # - name: Update Release Team Membership
      #   uses: actions/github-script@v7
      #   with:
      #     github-token: ${{ steps.app-token.outputs.token }}
      #     script: |
      #       const currentMember = await github.request('GET /orgs/{org}/teams/{team_slug}/members', {
      #         org: 'primer',
      #         team_slug: '${{ matrix.team_slug }}',
      #         headers: {
      #           'X-GitHub-Api-Version': '2022-11-28'
      #         }
      #       })
      #       if (currentMember.data.length) {
      #         console.log("Current Conductor:", currentMember.data[0].login)
      #         await github.request('DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}', {
      #           org: 'primer',
      #           team_slug: '${{ matrix.team_slug }}',
      #           username: currentMember.data[0].login,
      #           headers: {
      #             'X-GitHub-Api-Version': '2022-11-28'
      #           }
      #         })
      #       }
      #       await github.request('PUT /orgs/{org}/teams/{team_slug}/memberships/{username}', {
      #         org: 'primer',
      #         team_slug: '${{ matrix.team_slug }}',
      #         username: '${{ steps.pagerduty.outputs.user }}',
      #         role: 'maintainer',
      #         headers: {
      #           'X-GitHub-Api-Version': '2022-11-28'
      #         }
      #       })
